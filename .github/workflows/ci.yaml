name: CI

on:
  pull_request:
    branches: [main]

jobs:
  detect-updated-tools:
    runs-on: ubuntu-latest
    outputs:
      any_updated: ${{steps.updated-tools.outputs.any_updated}}
      tools: ${{steps.updated-tools.outputs.tools}}
    env:
      TOOL_GLOB: v0/*/**
      TOOL_REGEX: v0/([^/]+)/
    steps:
      - name: Check out the API
        uses: actions/checkout@v2

      - name: Detect all changed files
        id: changed-files
        uses: tj-actions/changed-files@v18.1
        with:
          files: |
            ${{env.TOOL_GLOB}}

      - name: Detect all updated tools
        id: updated-tools
        if: ${{steps.changed-files.outputs.any_changed == 'true'}}
        run: |
          # Check if we're running Bash 4 or higher
          if [ -z "$BASH_VERSION" ] || [ "${BASH_VERSION:0:1}" -lt "4" ]; then
            echo "Bash 4 or higher is required."
            exit 1
          fi

          # Extract the names of all updated tools
          declare -A tools
          for path in ${{steps.changed-files.outputs.all_changed_files}}; do
              if [[ $path =~ ${{env.TOOL_REGEX}} ]]; then
                  tools["${BASH_REMATCH[1]}"]=""
              else
                  echo "$path doesn't match" >&2
              fi
          done

          # Set the GitHub Actions output
          echo "::set-output name=any_updated::true"
          echo "::set-output name=tools::${!tools[@]}"

  install-test:
    needs: [detect-updated-tools]
    if: ${{needs.detect-updated-tools.outputs.any_updated == 'true'}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{matrix.os}}
    steps:
      - name: Add ~/.local/bin to the PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install toolctl
        run: curl -fsSL https://toolctl.io/install | sh

      - name: Set the LocalAPIBasePath
        env:
          TOOLCTL_API_VERSION: v0
        run: |
          config_dir="$HOME/.config/toolctl"
          mkdir -p "${config_dir}"
          echo LocalAPIBasePath: "${GITHUB_WORKSPACE}/${TOOLCTL_API_VERSION}" > "${config_dir}/config.yaml"

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Install and run the latest version of each tool
        run: toolctl install ${{needs.detect-updated-tools.outputs.tools}} --local
