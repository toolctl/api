name: Update

on:
  schedule:
    - cron: '36 3/6 * * *'
  workflow_dispatch:

jobs:
  update:
    if: github.repository_owner == 'toolctl'
    runs-on: ubuntu-latest
    steps:
      - name: Install toolctl
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: sudo /usr/bin/env bash -c "$(curl -fsSL https://raw.githubusercontent.com/toolctl/install/main/install)"

      - name: Set the LocalAPIBasePath
        env:
          TOOLCTL_API_VERSION: v0
        run: |
          config_dir="$HOME/.config/toolctl"
          mkdir -p "${config_dir}"
          echo LocalAPIBasePath: "$GITHUB_WORKSPACE/$TOOLCTL_API_VERSION" > "${config_dir}/config.yaml"

      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Switch to the api-discover branch, regardless if it exists or not
        run: |
          git checkout origin/api-discover || git checkout origin/main && git switch --create api-discover

      - name: Discover updated versions for all tools
        run: |
          toolctl list --all | xargs toolctl api discover

      - name: Check if any files have changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "TOOLCTL_UPDATES_FOUND=true" >> $GITHUB_ENV
          fi

      - name: Commit and push the changes
        if: ${{ env.TOOLCTL_UPDATES_FOUND }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update the toolctl API"
          git push -u origin api-discover

      - name: Create a pull request
        if: ${{ env.TOOLCTL_UPDATES_FOUND }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Update the toolctl API" \
            --body "This PR updates the toolctl API with the latest discovered versions."
          gh pr merge --auto --squash
